package com.paidu.crm.workbench.mapper;

import com.paidu.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 23 23:01:56 CST 2023
     */
    int deleteByPrimaryKey(String id);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 23 23:01:56 CST 2023
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 23 23:01:56 CST 2023
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 23 23:01:56 CST 2023
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 23 23:01:56 CST 2023
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 保存市场活动
     */
    int insertActivity(Activity activity);

    /**
     *根据条件分页查询
     */
    List<Activity> selectActivityByConditionForPage (Map<String,Object> map);

    /**
     *查询总记录数
     */
    int selectActivityCountByCondition (Map<String,Object> map);

    /**
     *根据id数组删除市场活动
     */
    int deleteActivityByIds(String[] id);

    /**
     * 根据id查询市场活动
     */
    Activity selectActivityById(String id);

    /**
     *更新市场活动
     */
    int updateActivity(Activity activity);

     List<Activity> selectAllActivitys();

    /**
     *批量导入市场活动
     */
     int insertActivityByList(List<Activity>  activityList);
    /**
     * 根据id查询市场活动的明细信息
     * @param id
     * @return
     */
    Activity selectActivityForDetailById(String id);

    /**
     * 根据clueId查询该线索相关联的市场活动的明细信息
     * @param clueId
     * @return
     */
    List<Activity> selectActivityForDetailByClueId(String clueId);

    /**
     * 根据name模糊查询市场活动，并且把已经跟clueId关联过的市场活动排除
     * @param map
     * @return
     */
    List<Activity> selectActivityForDetailByNameClueId(Map<String,Object> map);

    /**
     * 根据ids查询市场活动的明细信息
     * @param ids
     * @return
     */
    List<Activity> selectActivityForDetailByIds(String[] ids);

    /**
     * 根据name模糊查询市场活动，并且查询那些跟clueId关联过的市场活动
     * @param map
     * @return
     */
    List<Activity> selectActivityForConvertByNameClueId(Map<String,Object> map);


}